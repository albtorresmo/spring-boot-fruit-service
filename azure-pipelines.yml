# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'
  #vmImage: 'vs2017-win2016'

jobs:
- job: Prepare

  steps:
  - task: oc-setup@2
    inputs:
      connectionType: 'OpenShift Connection Service'
      openshiftService: 'OCP Cluster 1'
      #version: 'https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux.tar.gz'
      version: '4.5.9'
  - powershell: echo "##vso[task.setvariable variable=myOutputVar1;isOutput=true]this is the value"
    name: setvarStep
  - script: echo $(setvarStep.myOutputVar1)
    name: echovar1

  - bash: |
        echo "This is job Prepare."
        oc new-project ${DEV_PROJECT_NAME}
        oc new-project ${TEST_PROJECT_NAME}
    name: CreateProjects
    continueOnError: true
    
  - bash: |
      echo "This is job Prepare."
      export PROJECT_NAME=`oc get ns ${DEV_PROJECT_NAME} -o name`
      echo "##vso[task.setvariable variable=myOutputVar2;isOutput=true]$PROJECT_NAME"
    name: DetermineResult
    env:
      DEV_PROJECT_NAME: $(DEV_PROJECT_NAME)
  - script: echo $(setvarStep.myOutputVar2)
    name: echovar2

- job: Run

  steps:
  

  #- task: Maven@3
  #  inputs:
  #    mavenPomFile: 'pom.xml'
  #    mavenOptions: '-Xmx3072m'
  #    javaHomeOption: 'JDKVersion'
  #    jdkVersionOption: '1.8'
  #    jdkArchitectureOption: 'x64'
  #    publishJUnitResults: true
  #    testResultsFiles: '**/surefire-reports/TEST-*.xml'
  #    goals: 'test'
  #
  #- task: Maven@3
  #  inputs:
  #    mavenPomFile: 'pom.xml'
  #    mavenOptions: '-Xmx3072m'
  #    javaHomeOption: 'JDKVersion'
  #    jdkVersionOption: '1.8'
  #    jdkArchitectureOption: 'x64'
  #    publishJUnitResults: true
  #    testResultsFiles: '**/surefire-reports/TEST-*.xml'
  #    goals: 'package -DskipTests -Popenshift'

  - task: oc-cmd@2
    inputs:
      connectionType: 'OpenShift Connection Service'
      openshiftService: 'OCP Cluster 1'
      version: '4.5.9'
      uselocalOc: true
      cmd: 'get ns $(DEV_PROJECT_NAME) -o name'

  - task: OcConditionalCmd@2
    inputs:
      connectionType: 'OpenShift Connection Service'
      openshiftService: 'OCP Cluster 1'
      version: '4.5.9'
      uselocalOc: true
      cmd: 'new-project $(DEV_PROJECT_NAME)'
      condition: 'not_exists'
      resource: 'ns $(DEV_PROJECT_NAME)'

  - task: oc-cmd@2
    inputs:
      connectionType: 'OpenShift Connection Service'
      openshiftService: 'OCP Cluster 1'
      version: '4.5.9'
      uselocalOc: true
      cmd: 'new-build --name=$(BUILD_NAME) --image-stream=$(BUILD_IMAGE_STREAM) --binary -n $(DEV_PROJECT_NAME)'
      ignoreFlag: true

  - task: OcConditionalCmd@2
    inputs:
      connectionType: 'OpenShift Connection Service'
      openshiftService: 'OCP Cluster 1'
      version: '4.5.9'
      uselocalOc: true
      cmd: 'new-build --name=$(BUILD_NAME) --image-stream=$(BUILD_IMAGE_STREAM) --binary -n $(DEV_PROJECT_NAME)'
      condition: 'not_exists'
      resource: 'bc $(BUILD_NAME) -n $(TEST_PROJECT_NAME)'

  - task: oc-cmd@2
    inputs:
      connectionType: 'OpenShift Connection Service'
      openshiftService: 'OCP Cluster 1'
      version: '4.5.9'
      uselocalOc: true
      cmd: 'start-build --name=$(BUILD_NAME) --image-stream=$(BUILD_IMAGE_STREAM) --from-file=./target/$(APP_NAME)-dev-$(POM_VERSION).jar --wait -n $(TEST_PROJECT_NAME)'



