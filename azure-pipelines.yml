# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'test'

- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package -DskipTests -Popenshift'

- task: OcConditionalCmd@2
  inputs:
    connectionType: 'OpenShift Connection Service'
    openshiftService: 'OCP Cluster 1'
    version: '4.5'
    cmd: 'oc new project $(TEST_PROJECT_NAME)'
    condition: 'not_exists'
    resource: 'oc get project $(TEST_PROJECT_NAME)'

- task: OcConditionalCmd@2
  inputs:
    connectionType: 'OpenShift Connection Service'
    openshiftService: 'OCP Cluster 1'
    version: '4.5'
    cmd: 'oc new-build --name=$(BUILD_NAME) --image-stream=$(BUILD_IMAGE_STREAM) --binary -n $(TEST_PROJECT_NAME)'
    condition: 'not_exists'
    resource: 'oc get bc $(BUILD_NAME) -n $(TEST_PROJECT_NAME)'

- task: oc-cmd@2
  inputs:
    connectionType: 'OpenShift Connection Service'
    openshiftService: 'OCP Cluster 1'
    version: '4.5'
    cmd: 'oc start-build --name=$(BUILD_NAME) --image-stream=$(BUILD_IMAGE_STREAM) --from-file=./target/$(APP_NAME)-dev-$(POM_VERSION).jar --wait -n $(TEST_PROJECT_NAME)'


